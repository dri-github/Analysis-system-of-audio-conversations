# logging_config.py
import logging
import sys
import os
from datetime import datetime

class ColorFormatter(logging.Formatter):
    """–§–æ—Ä–º–∞—Ç—Ç–µ—Ä —Å —Ü–≤–µ—Ç–∞–º–∏ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏"""
    
    COLORS = {
        'DEBUG': '\033[36m',    # Cyan
        'INFO': '\033[32m',     # Green  
        'WARNING': '\033[33m',  # Yellow
        'ERROR': '\033[31m',    # Red
        'CRITICAL': '\033[35m', # Magenta
    }
    RESET = '\033[0m'
    
    def format(self, record):
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ª–æ–≥–≥–µ—Ä–æ–≤
        emoji_map = {
            'transcription_worker': 'üé§',
            'folder_watcher': 'üëÅÔ∏è',
            'worker_manager': 'üë∑',
            'root': '‚öôÔ∏è',
            'logging_config': '‚öôÔ∏è',
        }
        
        emoji = emoji_map.get(record.name.split('.')[-1], 'üìÑ')
        color = self.COLORS.get(record.levelname, '\033[37m')
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        timestamp = datetime.now().strftime('%H:%M:%S')
        levelname = f"{color}{record.levelname:<8}{self.RESET}"
        message = f"{emoji} {record.getMessage()}"
        
        return f"\033[90m{timestamp}\033[0m {levelname} {message}"

def configure_structured_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –û–î–ò–ù —Ä–∞–∑ –≤ main.py"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
    log_dir = "logs"
    os.makedirs(log_dir, exist_ok=True)
    log_filename = os.path.join(log_dir, "audio_processing.log")
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ handlers
    root_logger = logging.getLogger()
    for handler in root_logger.handlers[:]:
        root_logger.removeHandler(handler)
    
    # Handler –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ —Å —Ü–≤–µ—Ç–∞–º–∏
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setFormatter(ColorFormatter())
    
    # Handler –¥–ª—è —Ñ–∞–π–ª–∞ (–ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç)
    file_handler = logging.FileHandler(log_filename, encoding='utf-8')
    file_handler.setFormatter(logging.Formatter(
        '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    ))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
    root_logger.addHandler(console_handler)
    root_logger.addHandler(file_handler)
    root_logger.setLevel(logging.INFO)
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ –¥–ª—è —à—É–º–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    logging.getLogger("urllib3").setLevel(logging.WARNING)
    logging.getLogger("requests").setLevel(logging.WARNING)
    
    # –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    print("üéß" + "="*70)
    print("üéß üöÄ –ê–£–î–ò–û –ü–†–û–¶–ï–°–°–ò–ù–ì –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê")
    print(f"üéß üìÅ –ü–∞–ø–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ./audio_uploads")
    print(f"üéß üë• –†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: 3") 
    print(f"üéß üìù –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤: {log_filename}")
    print("üéß" + "="*70)
    
    logger = logging.getLogger("main")
    logger.info("System Ready")
    
    return logger

